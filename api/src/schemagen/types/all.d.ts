/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type All =
  | Jwt
  | Userlogin
  | User
  | Meetingtime
  | Courseid
  | Coursepreference
  | Coursesection
  | Teacherpreferenceform
  | Isvalidschedule
  | Schedule
  | Inputdata
  | ClassSizePrediction
  | PredictedClassSize
  | ("ADMIN" | "TEACHER")
  | ("FALL" | "SPRING" | "SUMMER")
  | ("MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY")
  | Success
  | InputdataRooms
  | InputdataTimeslots
  | InputdataCourses
  | InputdataProfessors
  | InputdataDimensions
  | ClassSizePredictionInner
  | PredictedClassSizeInner;
export type User = {
  email: string;
  /**
   * password hashed in db
   */
  password: string;
  [k: string]: unknown;
} & {
  name: string;
  /**
   * User roles
   */
  userrole: "ADMIN" | "TEACHER";
  [k: string]: unknown;
};
export type ClassSizePrediction = {
  course: string;
  term: number;
  prereq: string[];
  coreq: string[];
  pastEnrol: {
    year: number;
    term: number;
    size: number;
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}[];
export type PredictedClassSize = {
  course?: string;
  size?: number;
  constraints?: string[];
  term?: number;
  [k: string]: unknown;
}[];

export interface Jwt {
  /**
   * Json Web Token
   */
  authorization: string;
  [k: string]: unknown;
}
export interface Userlogin {
  email: string;
  /**
   * password hashed in db
   */
  password: string;
  [k: string]: unknown;
}
export interface Meetingtime {
  days: ("MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY")[];
  startTime: string;
  endTime: string;
  [k: string]: unknown;
}
export interface Courseid {
  /**
   * Course subject, e.g. SENG, CSC
   */
  subject: string;
  /**
   * Course code, e.g. 499,310
   */
  code: string;
  /**
   * Term course is offered in
   */
  term: "FALL" | "SPRING" | "SUMMER";
  [k: string]: unknown;
}
export interface Coursepreference {
  courseid: {
    /**
     * Course subject, e.g. SENG, CSC
     */
    subject: string;
    /**
     * Course code, e.g. 499,310
     */
    code: string;
    /**
     * Term course is offered in
     */
    term: "FALL" | "SPRING" | "SUMMER";
    [k: string]: unknown;
  };
  /**
   * Preference Value
   */
  preference: number;
  [k: string]: unknown;
}
export interface Coursesection {
  courseid: {
    /**
     * Course subject, e.g. SENG, CSC
     */
    subject: string;
    /**
     * Course code, e.g. 499,310
     */
    code: string;
    /**
     * Term course is offered in
     */
    term: "FALL" | "SPRING" | "SUMMER";
    [k: string]: unknown;
  };
  /**
   * Hours per week course is offered
   */
  hoursPerWeek?: number;
  /**
   * Capacity of course
   */
  capacity: number;
  /**
   * Professor teaching course
   */
  professors: ({
    email: string;
    /**
     * password hashed in db
     */
    password: string;
    [k: string]: unknown;
  } & {
    name: string;
    /**
     * User roles
     */
    userrole: "ADMIN" | "TEACHER";
    [k: string]: unknown;
  })[];
  /**
   * Start date of course
   */
  startDate?: string;
  /**
   * End date of course
   */
  endDate?: string;
  meetingtimes: {
    days: ("MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY")[];
    startTime: string;
    endTime: string;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface Teacherpreferenceform {
  /**
   * Professional Engineer certified
   */
  peng: boolean;
  userId: {
    email: string;
    /**
     * password hashed in db
     */
    password: string;
    [k: string]: unknown;
  } & {
    name: string;
    /**
     * User roles
     */
    userrole: "ADMIN" | "TEACHER";
    [k: string]: unknown;
  };
  courses: {
    /**
     * Course subject, e.g. SENG, CSC
     */
    subject: string;
    /**
     * Course code, e.g. 499,310
     */
    code: string;
    /**
     * Term course is offered in
     */
    term: "FALL" | "SPRING" | "SUMMER";
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface Isvalidschedule {
  [k: string]: unknown;
}
export interface Schedule {
  assignments: number[][];
  valid: boolean;
  complete: boolean;
  reward: {
    [k: string]: unknown;
  };
  iterations: number;
  c_hat: {
    [k: string]: unknown;
  };
  quality: {
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface Inputdata {
  rooms?: {
    location?: string;
    capacity?: number;
    equipment?: string[];
    [k: string]: unknown;
  }[];
  timeslots?: {
    day?: string[];
    length?: number;
    startTime?: number;
    [k: string]: unknown;
  }[];
  courses?: {
    coursename?: string;
    noScheduleOverlap?: string[];
    lecturesNumber?: number;
    labsNumber?: number;
    tutorialsNumber?: number;
    capacity?: number;
    [k: string]: unknown;
  }[];
  professors?: {
    name?: string;
    courses?: string[];
    timePreferences?: string[];
    coursePreferences?: string[];
    dayPreferences?: string[];
    equipmentPreferences?: string[];
    [k: string]: unknown;
  }[];
  dimensions?: {
    courses?: number;
    times?: number;
    teachers?: number;
    rooms?: number;
    [k: string]: unknown;
  };
  preferences?: number[][];
  loads?: number[];
  availabilities?: number[][];
  p_tgt?: number;
  max_iter?: number;
  [k: string]: unknown;
}
export interface Success {
  /**
   * Success
   */
  success: boolean;
  /**
   * Success message
   */
  message: string;
  [k: string]: unknown;
}
export interface InputdataRooms {
  location?: string;
  capacity?: number;
  equipment?: string[];
  [k: string]: unknown;
}
export interface InputdataTimeslots {
  day?: string[];
  length?: number;
  startTime?: number;
  [k: string]: unknown;
}
export interface InputdataCourses {
  coursename?: string;
  noScheduleOverlap?: string[];
  lecturesNumber?: number;
  labsNumber?: number;
  tutorialsNumber?: number;
  capacity?: number;
  [k: string]: unknown;
}
export interface InputdataProfessors {
  name?: string;
  courses?: string[];
  timePreferences?: string[];
  coursePreferences?: string[];
  dayPreferences?: string[];
  equipmentPreferences?: string[];
  [k: string]: unknown;
}
export interface InputdataDimensions {
  courses?: number;
  times?: number;
  teachers?: number;
  rooms?: number;
  [k: string]: unknown;
}
export interface ClassSizePredictionInner {
  course: string;
  term: number;
  prereq: string[];
  coreq: string[];
  pastEnrol: {
    year: number;
    term: number;
    size: number;
    [k: string]: unknown;
  }[];
  [k: string]: unknown;
}
export interface PredictedClassSizeInner {
  course?: string;
  size?: number;
  constraints?: string[];
  term?: number;
  [k: string]: unknown;
}
